name: Monitorar campo Status-Teste

on:
  repository_dispatch:
    types: [status_teste_changed]

jobs:
  handle_status_teste:
    runs-on: ubuntu-latest
    steps:
      - name: Verificar e agir conforme o campo
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEVOPS_TOKEN }}
          script: |
            const issueId = context.payload.client_payload.issue_id;
            const newValue = context.payload.client_payload.new_value;

            console.log(`Campo Status-Teste atualizado: ${newValue}`);

            // L√≥gica principal
            if (newValue === "Aprovado") {
              // Coment√°rio de aprova√ß√£o
              await github.rest.issues.createComment({
                issue_number: issueId,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "‚úÖ **Mudan√ßa aprovada!** O QA marcou como *Aprovado*."
              });

              // Notificar os participantes
              const issue = await github.rest.issues.get({
                issue_number: issueId,
                owner: context.repo.owner,
                repo: context.repo.repo
              });

              const assignees = issue.data.assignees.map(a => a.login);
              for (const user of assignees) {
                await github.rest.issues.createComment({
                  issue_number: issueId,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `üîî @${user}, sua mudan√ßa foi **Aprovada**.`
                });
              }

            } else if (newValue === "Revis√£o Necess√°ria") {
              // Coment√°rio de revis√£o
              await github.rest.issues.createComment({
                issue_number: issueId,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "‚ö†Ô∏è **Revis√£o necess√°ria!** O QA pediu ajustes."
              });

              // Mover issue para 'Em Desenvolvimento' (se tiver Project configurado)
              const projectId = "PVT_kwDODixzhM4BFb_a";
              const statusFieldId = "PVTSSF_lADODixzhM4BFb_azg2xh6E";
              const inDevOptionId = "your_option_id_for_em_desenvolvimento"; // substitua depois

              const updateQuery = `
                mutation {
                  updateProjectV2ItemFieldValue(
                    input: {
                      projectId: "${projectId}"
                      itemId: "${issueId}"
                      fieldId: "${statusFieldId}"
                      value: { singleSelectOptionId: "${inDevOptionId}" }
                    }
                  ) { clientMutationId }
                }
              `;

              await github.graphql(updateQuery);
            }
