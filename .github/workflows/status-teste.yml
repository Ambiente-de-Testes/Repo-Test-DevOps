name: Atualizar status e notificar responsáveis

on:
  issues:
    types: [labeled]

jobs:
  update-project-field:
    runs-on: ubuntu-latest
    steps:
      - name: Atualizar Status e notificar
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEVOPS_TOKEN }}
          script: |
            const projectId = "PVT_kwDODixzhM4BFb_a"; //
            const statusFieldId = "PVTSSF_lADODixzhM4BFb_azg2xh6E"; //
            const emDesenvolvimentoOption = "823324b0"; // 

            const issue = context.payload.issue;
            const label = context.payload.label.name;
            const issueId = issue.node_id;
            const issueNumber = issue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            let statusOptionId, message;
            if (label === "Aprovado") {
              message = "✅ Alteração aprovada! Bom trabalho! 🎉";
              // Se quiser mudar status, defina o id aqui
              // statusOptionId = "ID_OPCAO_APROVADO";
            } else if (label === "Revisão necessária") {
              message = "🔁 Revisão necessária — retornando para desenvolvimento.";
              statusOptionId = emDesenvolvimentoOption;
            } else {
              console.log("Label ignorada.");
              return;
            }

            // Busca o item do projeto (com paginação)
            let items = [];
            let cursor = null;
            let hasNextPage = true;
            while (hasNextPage) {
              const query = await github.graphql(`
                query($projectId: ID!, $after: String) {
                  node(id: $projectId) {
                    ... on ProjectV2 {
                      items(first: 100, after: $after) {
                        pageInfo { hasNextPage endCursor }
                        nodes { id content { ... on Issue { id } } }
                      }
                    }
                  }
                }
              `, { projectId, after: cursor });
              const pageItems = query.node.items.nodes;
              items = items.concat(pageItems);
              hasNextPage = query.node.items.pageInfo.hasNextPage;
              cursor = query.node.items.pageInfo.endCursor;
            }

            const item = items.find(i => i.content?.id === issueId);
            if (!item) {
              console.log("⚠️ Issue não está no projeto.");
              return;
            }

            // Se houver campo Status, também altera para "Em Desenvolvimento"
            if (statusOptionId) {
              try {
                await github.graphql(`
                  mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                    updateProjectV2ItemFieldValue(input: {
                      projectId: $projectId,
                      itemId: $itemId,
                      fieldId: $fieldId,
                      value: { singleSelectOptionId: $optionId }
                    }) {
                      projectV2Item { id }
                    }
                  }
                `, {
                  projectId,
                  itemId: item.id,
                  fieldId: statusFieldId,
                  optionId: statusOptionId
                });
                console.log(`✅ Campo "Status" atualizado para opção ${statusOptionId}`);
              } catch (error) {
                console.error("❌ Erro ao atualizar Status:", error.message);
              }
            }

            // Notifica os responsáveis (GitHub envia email se estiverem com notificação ativada)
            const assignees = (issue.assignees || []).map(a => `@${a.login}`).join(' ');
            const notify = assignees.length > 0 ? `\n\n👥 Notificando: ${assignees}` : '';

            // Cria o comentário
            try {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: issueNumber,
                body: `${message}${notify}`
              });
              console.log(`💬 Comentário adicionado na issue`);
            } catch (error) {
              console.error("❌ Erro ao comentar:", error.message);
            }

            console.log(`✅ Workflow finalizado para label: ${label}`);
